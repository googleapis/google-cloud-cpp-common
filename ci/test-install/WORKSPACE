# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This WORKSPACE verifies that the google-cloud-cpp libraries can be loaded
# into a different Bazel project.
workspace(name = "com_github_googleapis_google_cloud_cpp_test_install")

# Applications should use (maybe with a different version):
#
# http_archive(
#     name = "com_github_googleapis_google_cloud_cpp_common",
#     url = "http://github.com/googleapis/google-cloud-cpp-common/archive/v0.12.0.tar.gz",
#     strip_prefix = "google-cloud-cpp-0.12.0",
#     sha256 = "TBD",
# )
#

# But we want to test that the *current* version is correct. In our CI builds we
# always mount the source code in `/v`
local_repository(
    name = "com_github_googleapis_google_cloud_cpp_common",
    path = "/v",
)

load("@com_github_googleapis_google_cloud_cpp_common//bazel:google_cloud_cpp_common_deps.bzl", "google_cloud_cpp_common_deps")

google_cloud_cpp_common_deps()

# Configure @com_google_googleapis to only compile C++ and gRPC:
load("@com_google_googleapis//:repository_rules.bzl", "switched_rules_by_language")

switched_rules_by_language(
    name = "com_google_googleapis_imports",
    cc = True,  # C++ support is only "Partially implemented", roll our own.
    grpc = True,
)

# Have to manually call the corresponding function for gRPC:
#   https://github.com/bazelbuild/bazel/issues/1550
load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")

grpc_deps()
load("@upb//bazel:workspace_deps.bzl", "upb_deps")
upb_deps()
load("@build_bazel_rules_apple//apple:repositories.bzl", "apple_rules_dependencies")
apple_rules_dependencies()
load("@build_bazel_apple_support//lib:repositories.bzl", "apple_support_dependencies")
apple_support_dependencies()
